{"version":3,"file":"static/webpack/static/development/pages/index.js.636aa770256c2d1a54dd.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Component from 'react'\nimport Link from 'next/link'\nimport Head from 'next/head'\n// import { Near } from 'nearlib'\n\nconst contractId = \"metanear\";\nconst appTitle = \"Meta NEAR\"\nconst baseUrl = \"http://localhost:3000\"\n\nclass Grid extends React.Component {\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const canvas = this.refs.canvas\n        const ctx = canvas.getContext(\"2d\")\n        ctx.clearRect(0, 0, this.props.width, this.props.height);\n        ctx.fillStyle = \"#FF0000\";\n        for (let i = 0; i < this.props.width / this.props.cellWidth; ++i) {\n            ctx.beginPath()\n            ctx.moveTo(i * this.props.cellWidth, 0)\n            ctx.lineTo(i * this.props.cellWidth, this.props.height)\n            ctx.stroke()\n        }\n        for (let i = 0; i < this.props.height / this.props.cellHeight; ++i) {\n            ctx.beginPath()\n            ctx.moveTo(0, i * this.props.cellHeight)\n            ctx.lineTo(this.props.width, i * this.props.cellHeight)\n            ctx.stroke()\n        }\n        for (let i = 0; i < this.props.cells.length; ++i) {\n            ctx.fillRect(\n                (this.props.cells[i].location.x) * this.props.cellWidth,\n                (this.props.cells[i].location.y) * this.props.cellHeight,\n                this.props.cellWidth,\n                this.props.cellHeight)\n        }\n        ctx.beginPath()\n        ctx.arc((this.props.playerX + 0.5) * this.props.cellWidth, (this.props.playerY + 0.5) * this.props.cellHeight, this.props.cellWidth / 2 - 3, 0, 2 * Math.PI)\n        ctx.stroke()\n        document.addEventListener('mousemove', this.onMouseMove, false)\n    }\n    componentWillUnmount() {\n        document.removeEventListener('mousemove', this.onMouseMove, false)\n    }\n    onMouseMove = (e) => {\n        this.props.onHighlight(Math.floor(e.offsetX / this.props.cellWidth), Math.floor(e.offsetY / this.props.cellHeight))\n    }\n    render() {\n        return (\n            <canvas ref=\"canvas\" width={this.props.width} height={this.props.height} onClick={this.props.onClick} />\n        )\n    }\n}\n\nclass WalletLogin extends React.Component {\n    render() {\n        return (\n            <div id=\"sign-in-container\">\n                <h2> Hello stranger! Who are you?</h2>\n                <div id=\"login-form\">\n                    <div className=\"col-md-4\"><button onClick={this.props.onClick} id=\"login-button\" className=\"btn btn-lg btn-block btn-primary\">Login with NEAR Wallet</button></div>\n                </div>\n            </div> \n        )\n    }\n}\n\nclass WalletLogout extends React.Component {\n    render() {\n        return (\n            <div id=\"hello\">\n                <h2 id=\"hello\">Hi, {this.props.accountId}!</h2>\n            </div>\n        )\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { \n            cells: [], \n            highlighCell: {},\n            player: null\n        }\n        this.walletAccount = null\n    }\n    nearConnect = async () => {\n        this.walletAccount = new nearlib.WalletAccount(contractId, \"https://wallet.nearprotocol.com/\");\n        const accountId = this.walletAccount.getAccountId();\n        console.log(accountId)\n        const near = new nearlib.Near(new nearlib.NearClient(\n            this.walletAccount,\n            new nearlib.LocalNodeConnection(\"https://studio.nearprotocol.com/devnet\"),\n        ));\n        this.contract = await near.loadContract(contractId, {\n            viewMethods: [\"lookAround\", \"getPlayer\"],\n            changeMethods: [\"move\"],\n            sender: accountId,\n        });\n        let view = await this.contract.lookAround({ accountId })\n        console.log(view)\n        this.setState({ cells: view.cells || [] })\n        if (accountId) {\n            let player = await this.contract.getPlayer({ accountId })\n            console.log(player)\n            this.setState({player})\n        }\n    }\n    componentDidMount() {\n        this.nearConnect();\n    }\n    onHighlight = (x, y) => {\n        let highlighCell = {}\n        for (let i = 0; i < this.state.cells.length; ++i) {\n            if (this.state.cells[i].location.x == x && this.state.cells[i].location.y == y) {\n                highlighCell = this.state.cells[i]\n                break\n            }\n        }\n        this.setState({highlighCell})\n    }\n    login = () => {\n        this.walletAccount.requestSignIn(\n            contractId,\n            appTitle,\n            baseUrl + '/',\n            baseUrl + '/',\n        );\n    }\n    logout = () => {\n\n    }\n    movePlayer = () => {\n        let dx = 0\n        let dy = 0\n        if (Math.abs(this.state.player.location.x - this.state.highlighCell.location.x) == 1) {\n            dx = this.state.player.location.x > this.state.highlighCell.location.x ? -1 : 1\n        } else if (Math.abs(this.state.player.location.y - this.state.highlighCell.location.y) == 1) {\n            dy = this.state.player.location.y > this.state.highlighCell.location.y ? -1 : 1\n        }\n        this.contract.move({dx, dy}).then(() => {\n            const accountId = this.walletAccount.getAccountId();\n            this.contract.getPlayer({ accountId }).then(async (player) => {\n                console.log(player)\n                this.setState({ player })\n                let view = await this.contract.lookAround({ accountId })\n                console.log(view)\n                this.setState({ cells: view.cells || [] })\n            })\n        })\n        // console.log(this.state.highlighCell)\n    }\n    render() {\n        let control;\n        if (this.walletAccount && this.walletAccount.isSignedIn()) {\n            control = <WalletLogout accountId={this.walletAccount.getAccountId()} onClick={this.logout} />\n        } else {\n            control = <WalletLogin onClick={this.login} />\n        }\n        let cell = null;\n\n        return (\n            <div>\n                {control}\n                <Grid width={640} height={425} cellWidth={20} cellHeight={20} \n                cells={this.state.cells} onHighlight={this.onHighlight} \n                    playerX={this.state.player && this.state.player.location.x} \n                    playerY={this.state.player && this.state.player.location.y} \n                onClick={this.movePlayer} />\n                <div>Highlighted cell: {JSON.stringify(this.state.highlighCell)}</div>\n                <div>Player: {JSON.stringify(this.state.player)}</div>\n                {cell && <MiniGameView url={cell.webUrl} contractId={cell.contractId} />}\n            </div>\n        )\n    }\n}\n\nexport default function Index() {\n    return (\n        <div>\n            <Head>\n                <script src=\"https://cdn.jsdelivr.net/npm/nearlib@0.4.2/dist/nearlib.js\"></script>\n            </Head>\n            <div>\n                <Game />\n            </div>\n        </div>\n    )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;;;;;;AAnCA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AAxCA;AACA;AA0CA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAVA;AACA;AAYA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAGA;;;;AAPA;AACA;AASA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AASA;AACA;AACA;AAHA;AACA;AATA;AAQA;AARA;AAAA;AAaA;AAAA;AACA;AAdA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAhBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAiBA;AAAA;AACA;AAlBA;AAiBA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAVA;AAmCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA5CA;AA6CA;AAMA;AACA;AApDA;AACA;AADA;AAwDA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAGA;AAAA;AACA;AAJA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAzEA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AAQA;AACA;;;AAsBA;AACA;AACA;;;AA0CA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AAGA;;;;AAlGA;AACA;AAoGA;AACA;AAGA;AAAA;AAOA;;;;A","sourceRoot":""}