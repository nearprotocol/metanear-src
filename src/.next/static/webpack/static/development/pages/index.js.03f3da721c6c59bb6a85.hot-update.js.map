{"version":3,"file":"static/webpack/static/development/pages/index.js.03f3da721c6c59bb6a85.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Component from 'react'\nimport Link from 'next/link'\nimport Head from 'next/head'\n// import { Near } from 'nearlib'\n\nconst accountId = \"alice.near\";\nconst contractName = \"metanear\";\n\nclass Grid extends React.Component {\n    componentDidMount() {\n        const canvas = this.refs.canvas\n        const ctx = canvas.getContext(\"2d\")\n        for (let i = 0; i < this.props.width / this.props.cellWidth; ++i) {\n            ctx.beginPath()\n            ctx.moveTo(i * this.props.cellWidth, 0)\n            ctx.lineTo(i * this.props.cellWidth, this.props.height)\n            ctx.stroke()\n        }\n        for (let i = 0; i < this.props.height / this.props.cellHeight; ++i) {\n            ctx.beginPath()\n            ctx.moveTo(0, i * this.props.cellHeight)\n            ctx.lineTo(this.props.width, i * this.props.cellHeight)\n            ctx.stroke()\n        }\n        for (let i = 0; i < this.props.cells.length; ++i) {\n            ctx.fillRect(\n                (this.props.cells[i].location.x) * this.props.cellWidth,\n                (this.props.cells[i].location.y) * this.props.cellHeight,\n                this.props.cellWidth,\n                this.props.cellHeight)\n        }\n        document.addEventListener('mousemove', this.onMouseMove, false)\n    }\n    componentWillUnmount() {\n        document.removeEventListener('mousemove', this.onMouseMove, false)\n    }\n    onMouseMove = (e) => {\n        this.props.onHighlight(Math.floor(e.offsetX / this.props.cellWidth), Math.floor(e.offsetY / this.props.cellHeight))\n    }\n    render() {\n        return (\n            <canvas ref=\"canvas\" width={this.props.width} height={this.props.height} />\n        )\n    }\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { \n            cells: [{ location: { x: 1, y: 1 }, viewIndex: 1, contractId: \"ads\", webUrl: \"123\", owner: \"xyz\" }], \n            highlighCell: {}\n        }\n    }\n    nearConnect = async () => {\n        const walletAccount = new nearlib.WalletAccount(contractName, \"https://wallet.nearprotocol.com/\");\n        const accountId = walletAccount.getAccountId();\n        const near = new nearlib.Near(new nearlib.NearClient(\n            walletAccount,\n            new nearlib.LocalNodeConnection(\"https://studio.nearprotocol.com/devnet\"),\n        ));\n        this.contract = await near.loadContract(contractName, {\n            viewMethods: [\"getCellView\"],\n            changeMethods: [],\n            sender: accountId,\n        });\n        let cells = await contract.getCellView()\n        this.setState({cells})\n    }\n    componentDidMount() {\n        this.nearConnect();\n        // nearlib.dev.connect({\n        //     nodeUrl: \"https://studio.nearprotocol.com/devnet\"\n        // }).then((near) => {\n        //     near.loadContract(contractName, {\n        //         viewMethods: [\"getCellView\"],\n        //         changeMethods: [],\n        //         sender: accountId\n        //     }).then((contract) => {\n        //         this.contract = contract;\n        //         this.contract.getCellView()\n        //             .then((cells) => {\n        //                 this.setState({ cells })\n        //             });\n        //     })\n        // })\n    }\n    onHighlight = (x, y) => {\n        let highlighCell = {}\n        for (let i = 0; i < this.state.cells.length; ++i) {\n            if (this.state.cells[i].location.x == x && this.state.cells[i].location.y == y) {\n                highlighCell = this.state.cells[i]\n                break\n            }\n        }\n        this.setState({highlighCell})\n    }\n    render() {\n        return (\n            <div>\n                <Grid width={640} height={425} cellWidth={20} cellHeight={20} cells={this.state.cells} onHighlight={this.onHighlight} />\n                <div>{JSON.stringify(this.state.highlighCell)}</div>\n            </div>\n        )\n    }\n}\n\nexport default function Index() {\n    return (\n        <div>\n            <Head>\n                <script src=\"https://cdn.jsdelivr.net/npm/nearlib@0.4.2/dist/nearlib.js\"></script>\n            </Head>\n            <div>\n                <Game />\n            </div>\n        </div>\n    )\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;;;;;;AA9BA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAAA;AACA;;;AACA;AACA;AACA;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;AAnCA;AACA;AAqCA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAQA;AACA;AACA;AAHA;AACA;AARA;AAOA;AAPA;AAAA;AACA;AADA;AAYA;AACA;AAAA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AARA;AAyCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAFA;AAMA;AACA;;;AAeA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAWA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA1DA;AACA;AA4DA;AACA;AAGA;AAAA;AAOA;;;;A","sourceRoot":""}